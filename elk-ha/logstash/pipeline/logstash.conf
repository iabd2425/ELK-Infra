input {
  beats {
    port => 5044
    # ConfiguraciÃ³n para aceptar conexiones desde cualquier IP
    host => "0.0.0.0"
  }
  # file_completed {
    # path => "/filebeat-input/*.ndjson"
    # action => "move"
    # move_to => "/filebeat-input/processed"
  # }
}

filter {
  if "json-files" in [tags] {
    # filtro para jsonfiles
  } else if "scraper" in [tags] or "chatbot" in [tags] {
    # filtro para scraper
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} \- %{DATA:proceso} \- %{LOGLEVEL:level} \- %{GREEDYDATA:mensaje}"
      }
    }
    date {
      match => ["timestamp", "ISO8601"]
      target => "@timestamp"
    }
  }

}

output {
  if "json-files" in [tags] {
    # Salida para archivos JSON - Ã­ndice de hoteles
    elasticsearch {
      hosts => "${ELASTIC_HOSTS}"
      index => "hoteles"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      document_id => "%{id}_%{fechaEntrada}"
      cacert => "${CA_CERT}"
      retry_on_conflict => 3
    }

  } else if "scraper" in [tags] {
    # Salida para logs de scraper
    elasticsearch {
      hosts => "${ELASTIC_HOSTS}"
      index => "scraper-%{+YYYY.MM.dd}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "${CA_CERT}"
      retry_on_conflict => 3
    }
    
  } else if "chatbot" in [tags] {
    # Salida para logs de chatbot
    elasticsearch {
      hosts => "${ELASTIC_HOSTS}"
      index => "chatbot-%{+YYYY.MM.dd}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "${CA_CERT}"
      retry_on_conflict => 3
    }

  } else if "logs" in [tags] {
    # Salida para logs genericos
    elasticsearch {
      hosts => "${ELASTIC_HOSTS}"
      index => "filebeat-logs-%{+YYYY.MM.dd}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      cacert => "${CA_CERT}"
      retry_on_conflict => 3
    }

  }

  # Output para debugging (opcional)                                                              
  stdout { codec => rubydebug }
}
